---
title: "Sharing SNP genotype data with Robert Langefeld"
format: gfm
date: 2023-03-30
author: "Fred Boehm"
---

```{r}
nc <- 16
```

Goal is to create a csv file with, say, 10,000 subjects and up to 10,000 SNPs. It will also include 
a binary trait in the second column. The first column has subject IDs.

I'll share some of the UKB data, but I need to think about which chromosome and which binary trait to use.

I'll then use plink to subset the subjects and SNPs to get a set of plink files with the desired number of subjects and SNPs.

From there, I'll read the plink files into R and output a csv file.

Robert indicated that he wants the data to include a genomic region where there is a strong association for the binary trait that I'll include in the csv.

To verify that there is an association signal in the csv file, I'll do a quick SNP association analysis.

Here, I download UKB summary statistics for essential hypertension (I10). I then examine the p-values.


```{bash, eval = FALSE}
wget https://broad-ukb-sumstats-us-east-1.s3.amazonaws.com/round2/additive-tsvs/I10.gwas.imputed_v3.both_sexes.tsv.bgz -O dat/I10.gwas.imputed_v3.both_sexes.tsv.bgz
```

Looking at the p-values should tell me where the strongest association signal is.

```{r}
library(magrittr)
dat <- vroom::vroom(here::here("dat", "I10.gwas.imputed_v3.both_sexes.tsv.bgz"))
dat %>%
    dplyr::filter(pval == min(pval, na.rm=TRUE)) %>%
    dplyr::select(variant)
```

Make a fam file for use with plink. Column 6 must be the binary HTN trait.



```{r}
#pheno_b_all <- cbind(PRCA, TA, TD2, CAD, RA,
#                     BRCA, AS, MP, MDD, SS,
#                     QU, HT, FFI, DFI, OS,
#                     AN, GO, SAF, HA, TE,
#                     T1B, VMS, MY, SN, ES)
#save(pheno_b_all, file = paste0(comp_str, "02_pheno/05_pheno_b_clean.RData"))
# ABOVE CODE IS FROM SHENG YANG. IT TELLS US THE ORDERING OF THE TRAITS IN THE BINARY PHENOTYPE FILE.
load("/net/mulan/disk2/fredboe/research/ukb-intervals/02_pheno/05_pheno_b_clean.RData")
# loads an object called pheno_b_all
# HTN is column 12 per the list above
pheno_b_all %>% dim()
pheno_b_all[, 12] %>% table(useNA = "always")
# read old fam file
old_fam_fn <- "/net/mulan/disk2/fredboe/research/ukb-intervals/hapmap3/chr11.fam"
fam <- vroom::vroom(old_fam_fn, col_names = FALSE) %>%
    dplyr::select(-X6) %>%
    dplyr::mutate(X6 = pheno_b_all[, 12])
fam %>%
    vroom::vroom_write(file = here::here("dat", "chr11.fam"), col_names = FALSE)

```


```{bash, eval = FALSE}
original_bed=/net/mulan/disk2/fredboe/research/ukb-intervals/hapmap3/chr11.bed
original_bim=/net/mulan/disk2/fredboe/research/ukb-intervals/hapmap3/chr11.bim
# make sym links to original bed & original bim
ln -s -f ${original_bed} dat/chr11.bed
ln -s -f ${original_bim} dat/chr11.bim
```

```{r}
# read chr11 bim file then create a file for desired snps
bim <- vroom::vroom(here::here("dat", "chr11.bim"), col_names = FALSE)
lower <- 10^7
upper <- 3 * 10^7
bim %>%
    dplyr::filter(X4 >= lower & X4 <= upper) %>%
    dplyr::select(X2) %>%
    vroom::vroom_write(col_names = FALSE, file = here::here("dat", "chr11.snps"))
# define my sample_n function
sample_n_nona <- function(dat, var, n, discard_na = TRUE){
    if(discard_na){
        dat <- dat %>%
            dplyr::filter(!is.na({{ var }}))
    }
    out <- dat %>%
        dplyr::filter({{ var }} != -9) %>% # -9 is the code for missing in plink files
        dplyr::sample_n(n) %>%
    return(out)
}

new_fam <- fam %>%
    sample_n_nona(var = X6, n = 10000) %>%
    dplyr::arrange(X1)
new_fam %>%
    dplyr::select(X1, X2) %>%
    vroom::vroom_write(col_names = FALSE, file = here::here("dat", "subjects_to_keep"))
```

```{bash, eval = FALSE}
plink-1.9 --bfile dat/chr11 --keep dat/subjects_to_keep --extract dat/chr11.snps --make-bed --out dat/chr11.subset
```

```{r}
# read in the subsetted bed file
bed_fn <- here::here("dat", "chr11.subset.bed")
rds_fn <- here::here("dat", "chr11.subset.rds")
if (!file.exists(rds_fn)){
    bed <- bigsnpr::snp_readBed()
    chr11 <- bigsnpr::snp_attach(bed)
} else {
    chr11 <- bigsnpr::snp_attach(rds_fn)
}

geno <- chr11$genotypes[] %>%
    tibble::as_tibble() %>%
    dplyr::mutate(pheno = chr11$fam$affection) %>%
    dplyr::relocate(pheno)
vroom::vroom_write(geno, col_names = FALSE, file = here::here("dat", "chr11.csv"))
```

```{r}
# verify associations in the small data set
# first, impute missing genotypes
foo <- bigsnpr::snp_fastImputeSimple(Gna = chr11$genotypes, ncores = nc)
bar <- chr11$fam$affection
bar[bar == -9] <- 0
gwas <- bigstatsr::big_univLogReg(X = foo, y = bar, ncores = nc)
```

```{r}
CHR <- chr11$map$chromosome
POS <- chr11$map$physical.pos
bigsnpr::snp_manhattan(gwas = gwas, infos.chr = CHR, infos.pos = POS) +
    ggplot2::geom_hline(yintercept = -log10(5e-8), linetype = 2, color = "red")
```

```{r}
bigsnpr::snp_qq(gwas = gwas)

```

```{r}
devtools::session_info()
```

